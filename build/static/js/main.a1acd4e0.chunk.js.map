{"version":3,"sources":["img/flowers/red_flower.svg","img/flowers/blue_flower.svg","img/flowers/cactus_flower.svg","img/flowers/orange_flower.svg","img/flowers/purple_flower.svg","img/flowers/pink_flower.svg","components/InterestForm.js","components/ClickGate.js","components/RegisterInterest.js","components/Card.js","components/CardContainer.js","components/Flower.js","components/FlowerBar.js","components/Header.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","InterestForm","useState","email","setEmail","wrong","setWrong","willpay","setWillPay","submitted","setSubmitted","onSubmit","e","preventDefault","xhr","XMLHttpRequest","open","setRequestHeader","onreadystatechange","this","readyState","DONE","status","send","JSON","stringify","className","htmlFor","name","type","value","onChange","target","checked","ClickGate","RegisterInterest","interest_level","0","1","Card","props","color","alt","headerText","bodyHeader","bodyText","onClick","buttonText","React","Component","CardContainer","cards","targetCards","returnForgivenessCard","2","3","displayedCardIndex","setCard","map","index","key","Flower","flowers","src","redflower","altText","blueflower","cactusflower","orangeflower","purpleflower","pinkflower","min","Math","ceil","max","floor","length","flower","random","FlowerBar","displayFlowers","i","numberFlowers","push","style","gridTemplateColumns","toString","Header","App","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.a1acd4e0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/red_flower.e8e872f4.svg\";","module.exports = __webpack_public_path__ + \"static/media/blue_flower.6ff0dfd2.svg\";","module.exports = __webpack_public_path__ + \"static/media/cactus_flower.cd92de5c.svg\";","module.exports = __webpack_public_path__ + \"static/media/orange_flower.ce30b639.svg\";","module.exports = __webpack_public_path__ + \"static/media/purple_flower.70c67c5c.svg\";","module.exports = __webpack_public_path__ + \"static/media/pink_flower.3b1617e3.svg\";","import React, { useState } from 'react'\n\nfunction InterestForm () {\n\tconst [email, setEmail] = useState('');\n\tconst [wrong, setWrong] = useState('');\n\tconst [willpay, setWillPay] = useState(false);\n\tconst [submitted, setSubmitted] = useState(false);\n\n\tfunction handleSubmit (e) {\n\t\te.preventDefault()\n\t\tif (!submitted) {\n\t\t\tvar xhr = new XMLHttpRequest();\n\t\t\txhr.open(\"POST\", \"/api/create\", true);\n\t\t\txhr.setRequestHeader(\"Content-Type\", \"application/json;charset=UTF-8\")\n\t\t\txhr.onreadystatechange = function() {\n\t\t\t\tif (this.readyState === XMLHttpRequest.DONE && this.status === 200) {\n\t\t\t\t\tsetSubmitted(true)\n\t\t\t\t}\n\t\t\t}\n\t\t\txhr.send(JSON.stringify({\"email\": email,\n\t\t                             \"wrong\": wrong,\n\t\t                             \"willpay\": willpay}))\n\t\t}\n\t}\n\n\treturn(\n\t\t<form onSubmit={handleSubmit} className=\"interest-form grid margin-top\">\n\t\t\t<label className=\"email-label\" htmlFor=\"email\">Your Email:</label>\n\t\t\t<input className=\"email-form\" name=\"email\" type=\"email\" value={ email } onChange={ e => (setEmail(e.target.value)) } />\n\t\t\t<label htmlFor=\"wrong\">What's Wrong:</label>\n\t\t\t<textarea name=\"wrong\" type=\"text\" value={ wrong } onChange={ e => (setWrong(e.target.value)) } />\n\t\t\t<label htmlFor=\"willpay\" >I Promise To Consider Paying Money:</label>\n\t\t\t<input name=\"willpay\" type=\"checkbox\"  value={ willpay } onChange={ e => (setWillPay(e.target.checked)) } />\n\t\t\t<button>Submit</button>\n\t\t</form>\n\t)\n}\n\nexport default InterestForm;\n","import React, { useState } from 'react'\n\nfunction ClickGate () {\n\treturn(\n\t\t<div className=\"column gateholder\">\n\t\t\t<button className=\"gate tall-line\">Tell Me More</button>\n\t\t\t<button className=\"gate tall-line\">I'm Not Interested</button>\n\t\t</div>\n\t)\n}\n\nexport default ClickGate;\n","import React, { useState } from 'react';\nimport InterestForm from './InterestForm';\nimport ClickGate from './ClickGate';\n\nfunction RegisterInterest() {\n\tconst interest_level = {0: <InterestForm />,\n\t                        1: <ClickGate />}\n\treturn (\n\t\t<div className='column bottom-margin'>\n\t\t\t<div className='column text-left'>\n\t\t\t\t<h3>I want to humiliate my enemies.</h3>\n\t\t\t\t<div className=\"card-text-body\">\n\t\t\t\t    I want help, and I'm willing to share personal information.\n\t\t\t\t</div>\n\t\t\t\t{interest_level[0]}\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default RegisterInterest;","import React from 'react';\n\nclass Card extends React.Component {\n\trender() {\n\t\treturn(\n\t\t\t\t<div className=\"card column card-margin align-center\">\n\t\t\t\t\t<div className={this.props.color + \" card-header\"} alt=\"Square Button\">\n\t\t\t\t\t\t<div className=\"card-header-text tall-line\">\n\t\t\t\t\t\t\t{this.props.headerText}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className='card-text-header'>\n\t\t\t\t\t\t\t{this.props.bodyHeader}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className='card-text-body'>\n\t\t\t\t\t\t\t{this.props.bodyText}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<button className='card-button' onClick={this.props.onClick}>\n\t\t\t\t\t\t\t<div className={'card-button-text tall-line ' + this.props.color + '-text'}>\n\t\t\t\t\t\t\t\t{this.props.buttonText}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default Card;","import React, { useState } from 'react';\nimport Card from './Card'\n\nfunction CardContainer() {\n\tconst cards = {0: [{color: 'green',\n\t                    headerText: 'Once',\n\t                    bodyHeader: 'It was',\n\t                    bodyText: 'infuriating.',\n\t                    buttonText: 'Yes.',\n\t                    targetCards : 1}, \n\t                   {color: 'teal',\n\t                    headerText: 'Many times',\n\t                    bodyHeader: 'I know',\n\t                    bodyText: 'the patience of',\n\t                    buttonText: 'Revenge.',\n\t                    targetCards : 3}, \n\t                   {color: 'blue',\n\t                    headerText: 'No',\n\t                    bodyHeader: 'But,',\n\t                    bodyText: 'somehow.',\n\t                    buttonText: \"I'm grumpy\",\n\t                    targetCards : 2}],\n\t               1: [returnForgivenessCard(), \n\t                   {color: 'teal',\n\t                    headerText: 'Infuriating',\n\t                    bodyHeader: \"Doesn't quite\",\n\t                    bodyText: 'cover the',\n\t                    buttonText: 'Feeling.',\n\t                    targetCards : 2}],\n\t               2: [{color: 'teal',\n\t                    headerText: 'This sounds',\n\t                    bodyHeader: \"Serious.\",\n\t                    bodyText: 'The only person I can control.',\n\t                    buttonText: 'Is myself.',\n\t                    targetCards : 3},\n\t                    returnForgivenessCard()],\n                   3: [returnForgivenessCard(),\n                       {color: 'teal',\n                        headerText: \"I Can't\",\n                        bodyHeader: \"Feel anything but anger\",\n                        bodyText: 'about my experience',\n                        buttonText: 'Be Mean.',\n                        targetCards : 0}]};\n    const [displayedCardIndex, setCard] = useState(0);\n\n    function returnForgivenessCard(color) {\n    \treturn {color: color ? color : 'green',\n                headerText: 'Forgiveness',\n                bodyHeader: 'As Always,',\n                bodyText: 'will be',\n                buttonText: 'Best.',\n                targetCards : 0};\n    };\n\n\treturn(\n\t\t<div className=\"cards-container switch justify-center align-center\">\n\t\t\t{cards[displayedCardIndex].map((value, index) => {\n\t\t\t\treturn <Card key={index} \n\t\t\t\t             color={value.color} \n\t\t\t\t             headerText={value.headerText} \n\t\t\t\t             buttonText={value.buttonText} \n\t\t\t\t             bodyHeader={value.bodyHeader}\n\t\t\t\t             bodyText={value.bodyText}\n\t\t\t\t             onClick = {() => setCard(value.targetCards)}/>\n\t\t\t})}\n\t\t</div>\n\t)\n}\n\nexport default CardContainer;","import React from 'react';\nimport redflower from '../img/flowers/red_flower.svg';\nimport blueflower from '../img/flowers/blue_flower.svg';\nimport cactusflower from '../img/flowers/cactus_flower.svg';\nimport orangeflower from '../img/flowers/orange_flower.svg';\nimport purpleflower from '../img/flowers/purple_flower.svg';\nimport pinkflower from '../img/flowers/pink_flower.svg';\n\nclass Flower extends React.Component {\n\trender() {\n\t\tconst flowers = [{src: redflower,\n\t\t                  altText: \"Red\"},\n\t\t                 {src: blueflower,\n\t\t                  altText: \"Blue\"},\n\t\t                 {src: cactusflower,\n\t\t                  altText: \"Cactus\"},\n\t\t                 {src: orangeflower,\n\t\t                  altText: \"Orange\"},\n\t\t                 {src: purpleflower,\n\t\t                  altText: \"Purple\"},\n\t\t                 {src: pinkflower,\n\t\t                  altText: \"Pink\"}];\n\t\tconst min = Math.ceil(0);\n\t\tconst max = Math.floor(flowers.length);\n\t\t\n\t\t// Thank you Mozilla Developer Network\n\t\tfunction getRandomFlowerIndex() {\n\t\t  //The maximum is exclusive and the minimum is inclusive\n\t\t  return Math.floor(Math.random() * (max - min)) + min;\n\t\t}\n\t\tvar flower = flowers[getRandomFlowerIndex()];\n\t\treturn(\n\t\t\t<img className=\"flower-image\" src={flower.src} alt={flower.altText}/>\n\t\t)\n\t}\n}\n\nexport default Flower;","import React from 'react';\nimport Flower from './Flower'\n\nclass FlowerBar extends React.Component {\n\trender() {\n\t\tconst numberFlowers = 7;\n\t\tvar displayFlowers = [];\n\t\tfor (let i = numberFlowers - 1; i >= 0; i--) {\n\t\t\tdisplayFlowers.push(<Flower key={i} />)\n\t\t}\n\n\t\treturn(\n\t\t\t<div style={{ gridTemplateColumns: \"repeat(\" + numberFlowers.toString() + \", 1fr)\" }} className=\"flowers-container grid center\" >\n\t\t\t    {displayFlowers}\n\t\t\t</div>\n\t\t)\n\t};\n}\n\nexport default FlowerBar;","import React from 'react';\n\nclass Header extends React.Component {\n\trender() {\n\t\treturn(\n    \t<div className=\"header\">\n\t        <h1>Welcome.</h1> \n\t\t\t<h3>Has someone been mean to you?</h3>\n\t\t</div>\n\t\t)\n\t}\n}\n\nexport default Header;","import React from 'react'\nimport './App.css'\nimport './css/flowers.css'\nimport './css/cards.css'\nimport './css/interest-form.css'\nimport './css/flex.css'\nimport './css/grid.css'\nimport './css/text.css'\nimport './css/colors.css'\nimport './css/media.css'\nimport './css/margins.css'\nimport RegisterInterest from './components/RegisterInterest'\nimport CardContainer from './components/CardContainer'\nimport FlowerBar from './components/FlowerBar'\nimport Header from './components/Header'\n\nfunction App() {\n  return (\n    <div className=\"App grid body-grid\">\n    \t<Header />\n        <CardContainer />\n        <FlowerBar />\n        <RegisterInterest />\n    </div>\n  );\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}